---
import Layout from '../../../layouts/Layout.astro';
import type { Artista, Actividad } from '../../../data/artistas';
import { artistas } from '../../../data/artistas';

// Definir explícitamente la interfaz para los parámetros de ruta
interface StaticPathParams {
  artistaId: string;
  actividadId: string;
}

// Función para generar rutas estáticas con tipos correctos
export async function getStaticPaths() {
  const paths: Array<{params: StaticPathParams}> = [];
  
  // Iterar sobre cada artista y sus actividades
  Object.entries(artistas).forEach(([artistaId, artista]) => {
    artista.actividades.forEach(actividad => {
      // Asegurar que el ID de la actividad nunca sea undefined
      const actividadId = actividad.id || '';
      
      // Solo agregar la ruta si el ID de la actividad es válido
      if (actividadId) {
        paths.push({
          params: { artistaId, actividadId }
        });
      }
    });
  });
  
  return paths;
}

// Obtener y validar los parámetros de la URL
const { artistaId, actividadId } = Astro.params as StaticPathParams;

// Verificar que el artista existe
const artista = artistas[artistaId];
if (!artista) {
  return Astro.redirect('/404');
}

// Buscar la actividad específica
const actividad = artista.actividades.find(a => a.id === actividadId);
if (!actividad) {
  return Astro.redirect('/404');
}
---

<Layout title={`${actividad.titulo} - ${artista.nombre}`}>
  <main class="max-w-5xl mx-auto px-4 py-12">
    <div class="bg-white shadow-lg rounded-lg overflow-hidden">
      {actividad.tipo === 'video' && actividad.video ? (
        <div class="aspect-w-16 aspect-h-9">
          <iframe
            src={actividad.video}
            class="w-full h-full"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
          ></iframe>
        </div>
      ) : (
        actividad.imagen && <img src={actividad.imagen} alt={actividad.titulo} class="w-full h-96 object-cover" />
      )}
      <div class="p-8">
        <div class="flex flex-wrap items-center justify-between mb-6">
          <h1 class="text-4xl font-bold text-gray-900">{actividad.titulo}</h1>
          <a href={`/circulacion/${artistaId}`} class="mt-2 inline-flex items-center text-blue-600 hover:text-blue-800">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-1 w-1 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            Volver a {artista.nombre}
          </a>
        </div>
        
        <div class="flex flex-wrap text-gray-600 mb-6">
          {actividad.fecha && (
            <div class="mr-6 mb-2">
              <span class="font-medium text-gray-700">Fecha:</span> {actividad.fecha}
            </div>
          )}
          {actividad.lugar && (
            <div class="mb-2">
              <span class="font-medium text-gray-700">Lugar:</span> {actividad.lugar}
            </div>
          )}
        </div>
        
        <div class="prose prose-lg max-w-none">
          <p class="text-gray-700">{actividad.descripcionCompleta || actividad.descripcion}</p>
        </div>
        
  
      </div>
    </div>
    
    <div class="mt-12">
      <h2 class="text-2xl font-bold text-white mb-6">Otras actividades de {artista.nombre}</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
        {artista.actividades
          .filter(a => a.id !== actividadId)
          .map(a => (
            <a href={`/circulacion/${artistaId}/${a.id}`} class="block transition-transform hover:scale-105">
              <div class="bg-white rounded-lg shadow-md overflow-hidden">
                {a.tipo === 'video' ? (
                  <div class="relative w-full h-48 bg-gray-200">
                    <div class="absolute inset-0 flex items-center justify-center">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                    </div>
                  </div>
                ) : (
                  a.imagen && <img src={a.imagen} alt={a.titulo} class="w-full h-48 object-cover" />
                )}
                <div class="p-4">
                  <h3 class="text-lg font-semibold text-gray-900 mb-1">{a.titulo}</h3>
                  <p class="text-sm text-gray-600 line-clamp-2">{a.descripcion}</p>
                </div>
              </div>
            </a>
          ))
        }
      </div>
    </div>
  </main>
</Layout>
